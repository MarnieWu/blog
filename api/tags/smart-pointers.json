{"name":"smart-pointers","slug":"smart-pointers","count":2,"postlist":[{"title":"智能指针2 Smart Pointers 2","uid":"9fb78f735ce3a3f25bf1795a347b0649","slug":"smart-pointers-2","date":"2024-12-05T03:36:40.000Z","updated":"2025-01-12T17:18:48.432Z","comments":true,"path":"api/articles/smart-pointers-2.json","keywords":"","cover":[],"text":"Rc 智能指针Rust 所有权机制要求一个值只能有一个所有者，如果出现需要共享数据的情况，也就是说一个数据资源拥有多个所有者，或者说一个资源需要被多个对象引用，...","permalink":"/post/smart-pointers-2","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"smart-pointers","slug":"smart-pointers","count":2,"path":"api/tags/smart-pointers.json"}],"author":{"name":"Marnie","slug":"blog-author","avatar":"/images/favicon.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"智能指针 Smart Pointers","uid":"2e2bd34ffcfc46d5575f7c18eed689f5","slug":"smart-pointers","date":"2024-10-24T07:41:13.000Z","updated":"2025-01-12T17:18:56.029Z","comments":true,"path":"api/articles/smart-pointers.json","keywords":"","cover":[],"text":"首先理解，指针是什么？指针是一个存储了内存地址（memory address）的变量，该内存地址引用或者指向了内存中另外的数据。 在 Rust 中最常见的指针就...","permalink":"/post/smart-pointers","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"16 mins."},"categories":[],"tags":[{"name":"smart-pointers","slug":"smart-pointers","count":2,"path":"api/tags/smart-pointers.json"}],"author":{"name":"Marnie","slug":"blog-author","avatar":"/images/favicon.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}